package Servicos;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;

import objects.Funcionario;

import org.apache.http.HttpResponse;
import org.apache.http.client.methods.HttpPost;
import org.apache.http.entity.StringEntity;
import org.apache.http.impl.client.DefaultHttpClient;
import org.json.JSONObject;

import android.util.Log;

public class Login {

	public static String POST(String url, Funcionario funcionario) {
		InputStream inputStream = null;
		String result = "";
		try {
			// Criacao do HTTPCLIENT
			DefaultHttpClient httpclient = new DefaultHttpClient();

			// POST request
			HttpPost httpPost = new HttpPost(url);

			String json = "";

			// Construir objecto JSON
			JSONObject jsonObject = new JSONObject();
			jsonObject.accumulate("nome", funcionario.getNome());
			jsonObject.accumulate("mail", funcionario.getMail());
			jsonObject.accumulate("id", funcionario.getID());

			// Definir JSON para StringEntity
			StringEntity se = new StringEntity(json);

			// definir HTTP POST Entity
			httpPost.setEntity(se);

			// definir headers para tipo do conteudo
			//
			httpPost.setHeader("Accept", "application/json");
			httpPost.setHeader("Content-type", "application/json");

			// fazer pedido POST para o URL fornecido
			HttpResponse httpResponse = httpclient.execute(httpPost);

			// recebe resposta como INPUTSTREAM
			inputStream = httpResponse.getEntity().getContent();

			// converter INPUTSTREAM para String
			if (inputStream != null) {
				result = convertInputStreamToString(inputStream);
			} else {
				result = "ERRO!";
			}
		} catch (Exception e) {
			Log.d("InputStream", e.getLocalizedMessage());
		}
		return result;
	}

	private static String convertInputStreamToString(InputStream inputStream)
			throws IOException {
		BufferedReader bufferedReader = new BufferedReader(
				new InputStreamReader(inputStream));
		String line = "";
		String result = "";
		while ((line = bufferedReader.readLine()) != null)
			result += line;

		inputStream.close();
		return result;

	}

	// ESTA PARTE FICA NA ACTIVITY CORRESPONDENTE -> NESTE CASO "LOGIN"

	// public boolean isConnected() {
	// ConnectivityManager connMgr = (ConnectivityManager)
	// getSystemService(Activity.CONNECTIVITY_SERVICE);
	// NetworkInfo networkInfo = connMgr.getActiveNetworkInfo();
	// if (networkInfo != null && networkInfo.isConnected())
	// return true;
	// else
	// return false;
	// }
	//
	// private class HttpAsynkTask extends AsyncTask<String, Void, String>{
	//
	// @Override
	// protected String doInBackground(String... params) {
	// // TODO Auto-generated method stub
	// return null;
	// }
	//
	// @Override
	// protected void onPostExecute(String result) {
	// // TODO Auto-generated method stub
	// super.onPostExecute(result);
	// }

}
